{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","React","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,wCAMFC,EAAY,SAACC,GAElB,IAAMC,EAAOD,EAAME,cAAcC,KAChC,SAACC,EAAKC,GACL,OACC,wBAAIC,IAAKD,GACR,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAOR,OACC,+BAAQJ,IAeKU,EAXD,SAACX,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeQ,EAAmBV,EAAnBU,gBAEtB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCQjDE,E,4MA9CdC,aAAe,CACdN,KAAM,GACNC,IAAK,I,EAGNM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACHA,EAAMC,OAArBV,EADkB,EAClBA,KAAMW,EADY,EACZA,MAEb,EAAKC,SAAL,eACEZ,EAAOW,K,EAIVE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOe,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAChB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GAxCvCO,aCoCJC,E,4MAhCdd,MAAQ,CACPe,WAAY,I,EAGbnB,gBAAkB,SAACL,GAAW,IAErBwB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,EAKnBgB,aAAe,SAACU,GAEd,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAG9C,IACDF,EAAeP,KAAKR,MAApBe,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GA5Bba,IAAMP,W,MCCxBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.dffb47f5.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Tools</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n\t\n\tconst rows = props.characterData.map(\n\t\t(row, index) => {\n\t\t\treturn (\n\t\t\t\t<tr key={index}>\n\t\t\t\t\t<td>{row.name}</td>\n\t\t\t\t\t<td>{row.job}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n\t\t\t\t\t  </td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t}\n\t)\n\t\n\treturn (\n\t\t<tbody>{rows}</tbody>\n\t)\n}\n\nconst Table = (props) => {\n  const {characterData, removeCharacter} = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n}\n\nexport default Table\n\n","import React, {Component} from 'react'\n\nclass Form extends Component {\n\tinitialState = {\n\t\tname: '',\n\t\tjob: '',\n\t}\n\t\n\tstate = this.initialState\n\t\n\thandleChange = (event) => {\n\t\tconst {name, value} = event.target\n\t\t\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t})\n\t}\n\t\n\tsubmitForm = () => {\n\t  this.props.handleSubmit(this.state)\n\t  this.setState(this.initialState)\n\t}\n\t\n\trender() {\n\t  const { name, job } = this.state;\n\t\n\t  return (\n\t    <form>\n\t      <label htmlFor=\"name\">Name</label>\n\t      <input\n\t        type=\"text\"\n\t        name=\"name\"\n\t        id=\"name\"\n\t        value={name}\n\t        onChange={this.handleChange} />\n\t      <label htmlFor=\"job\">Job</label>\n\t      <input\n\t        type=\"text\"\n\t        name=\"job\"\n\t        id=\"job\"\n\t        value={job}\n\t        onChange={this.handleChange} />\n\t       <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n\t    </form>\n\t  );\n\t}\n\t\n}\n\nexport default Form;","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends React.Component {\n\t\n\tstate = {\n\t\tcharacters: [],\n\t}\n\t\n\tremoveCharacter = (index) => {\n\t\t\n\t  const {characters} = this.state\n\t\n\t  this.setState({\n\t    characters: characters.filter((character, i) => {\n\t      return i !== index\n\t    }),\n\t  })\n\t}\n\t\n\thandleSubmit = (character) => {\n\t\t// The ES6 spread feature will add all the items from the current state.characters PLUS the new one\n\t  this.setState({characters: [...this.state.characters, character]})\n\t}\n\t\n\trender() {\n\t\tconst { characters } = this.state\n\t\t\n\t\treturn (\n\t\t  <div className=\"container\">\n\t\t    <Table characterData={characters} removeCharacter={this.removeCharacter} />\n\t\t    <Form handleSubmit={this.handleSubmit} />\n\t\t  </div>\n\t\t)\n\t}\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}